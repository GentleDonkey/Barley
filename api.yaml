openapi: 3.0.0
info:
  title: Barley Web Application
  description: Barley Web Application
  version: 1.0.0
servers:
  - url: 'localhost:8080/api/v1'
tags:
  - name: "Admin shipment"
    description: "For admin view, management shipments"
  - name: "Admin user"
    description: "For admin view, management users"
  - name: "Admin login"
    description: "For admin view, login to account"
  - name: "User login"
    description: "For user view, login to account"
  - name: "User shipment"
    description: "For user view, check shipments"
paths:
  /admin/shipments:
    get:
      tags:
        - "Admin shipment"
      summary: "Return a list of shipments"
      responses:
        "200":
          description: "A list of shipments is found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shipment"
        "404":
          description: "None of shipment is found"
        "500":
          description: "Internal server error"
  /admin/shipments/{id}:
    get:
      tags:
        - "Admin shipment"
      summary: "Return a shipment by id"
      parameters:
        - name: id
          in: path
          required: true
          description: "The id of the shipment to return"
          schema:
            $ref: "#/components/schemas/shipment/properties/id"
      responses:
        "200":
          description: "A shipment with a particular id is found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shipment"
        "400":
          description: "The specified shipment id is invalid"
        "404":
          description: "A shipment with a particular id is not found"
        "500":
          description: "Internal server error"
    delete:
      tags:
        - "Admin shipment"
      summary: "Delete a shipment by id"
      parameters:
        - name: id
          in: path
          required: true
          description: "The id of the shipment to delete"
          schema:
            $ref: "#/components/schemas/shipment/properties/id"
      responses:
        "200":
          description: "A shipment with a particular id is deleted successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shipment"
        "400":
          description: "The specified shipment id is invalid"
        "404":
          description: "A shipment with a particular id is not deleted successfully"
        "500":
          description: "Internal server error"
    patch:
      tags:
        - "Admin shipment"
      summary: "Delete a shipment by id"
      parameters:
        - name: id
          in: path
          required: true
          description: "The id of the shipment to update"
          schema:
            $ref: "#/components/schemas/shipment/properties/id"
      responses:
        "200":
          description: "A shipment with a particular id is updated successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shipment"
        "400":
          description: "The specified shipment id is invalid"
        "404":
          description: "A shipment with a particular id is not updated successfully"
        "500":
          description: "Internal server error"
  /admin/shipment:
    post:
      tags:
        - "Admin shipment"
      summary: "Add a new shipment"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shipment"
      responses:
        "201":
          description: "A new shipment is created successfully"
        "404":
          description: "A new shipment is not created successfully"
        "500":
          description: "Internal server error"
  /admin/users:
    get:
      tags:
        - "Admin user"
      summary: "Return a list of users"
      responses:
        "200":
          description: "A list of users is found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "404":
          description: "None of user is found"
        "500":
          description: "Internal server error"
  /admin/user:
    post:
      tags:
        - "Admin user"
      summary: "Add a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        "201":
          description: "A new user is created successfully"
        "404":
          description: "A new user is not created successfully"
        "500":
          description: "Internal server error"
  /admin/login:
    post:
      tags:
        - "Admin login"
      summary: "Login to admin account"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/admin"
      responses:
        "200":
          description: "Success to login to an admin account"
        "401":
          description: "This admin does not exist, or the password does not match"
        "404":
          description: "Fail to login to an admin account"
        "500":
          description: "Internal server error"
  /user/tracking/{code}:
    get:
      tags:
        - "User shipment"
      summary: "Return all shipments of a specified user"
      parameters:
        - name: code
          in: path
          required: true
          description: "The unique random of the user"
          schema:
            $ref: "#/components/schemas/user/properties/RandomCode"
      responses:
        "200":
          description: "All shipments of a particular user are found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shipment"
        "400":
          description: "The specified code is invalid"
        "404":
          description: "None of shipment is found"
        "500":
          description: "Internal server error"


components:
  schemas:
    shipment:
      type: "object"
      required:
        - "id"
        - "UserID"
        - "Tracking"
        - "Date"
      properties:
        id:
          type: "integer"
          format: "int6"
        UserID:
          type: "integer"
          format: "int6"
        Description:
          type: "string"
          format: "varchar64"
        Tracking:
          type: "string"
          format: "varchar16"
        Comment:
          type: "string"
          format: "varchar255"
        Date:
          type: "string"
          format: "varchar16"
    user:
      type: "object"
      required:
        - "id"
        - "WeChatID"
        - "RandomCode"
      properties:
        id:
          type: "integer"
          format: "int6"
        WeChatID:
          type: "string"
          format: "varchar64"
        WeChatName:
          type: "string"
          format: "varchar255"
        RandomCode:
          type: "string"
          format: "varchar16"
    admin:
      type: "object"
      required:
        - "id"
        - "Name"
        - "Password"
      properties:
        id:
          type: "integer"
          format: "int6"
        Name:
          type: "string"
          format: "varchar16"
        Password:
          type: "string"
          format: "varchar255"